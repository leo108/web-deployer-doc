名词解释
==========

团队
-----
一个团队可以创建多个项目。一个团队可以拥有多个用户，团队的创建者为管理员，可以在团队界面转让管理员。

项目
-----
通常情况下一个代码仓库对应一个项目，一个项目只能属于一个团队。项目在创建时会要求输入一个 ``口令``，对于非创建者，在首次进入项目页面时需要输入正确的口令才可继续操作。

服务器
------
Web Deployer 会在服务器上执行用户指定的命令来实现代码部署，目前仅支持 Linux 服务器。一台服务器可以添加多个标签。

中转服务器
----------
如果某些服务器没有对外开放 ssh 登录端口，需要从某台服务器中转，则称这些用于中转的服务器为 ``中转服务器`` 或者 ``跳板机``。

服务器标签
----------
基于团队、项目的情况以及服务器所扮演的角色，可以给服务器设置标签，例如用于执行前端编译的服务器可以加上 ``fe-build`` 标签，用于提供 web 服务的服务器可以加速 ``web-server`` 标签。在配置部署流程时可以指定标签而不是具体服务器，当增减服务器时就不需要去调整部署流程。

工作流
-------
一个项目可以有多个工作流，每个工作流对应不同的部署场景，如：部署到测试环境、部署到正式环境。每个工作流可以包含一个或者多个子流程。

子流程
-------
子流程有两种类型：``执行任务`` 和 ``暂停``。

一个 ``执行任务`` 子流程可以包含多个任务，一个子流程会在同一批服务器上执行，可以通过标签或者具体服务器来指定这批任务要在哪些服务器上执行。在部署时，如果一个子流程拥有多个子任务并且需要在多台服务器上执行，系统会串行地在所有服务器上执行第一个任务，全部执行完毕并且成功之后再在所有服务器上执行第二个任务，以此类推。

``暂停`` 子流程不包含任何任务、服务器。当部署执行到 ``暂停`` 子流程时系统不会做任何操作，用户需在部署界面确认是否要继续执行，如果确认则系统任务该子流程执行成功，并开始执行下一个子流程，否则系统认为执行失败，对应的部署任务也就失败。

任务
-----
子流程和任务的关系是多对多。一个任务通常是一个很小的操作，例如：下载代码包。目前任务的定义可以是 PHP 也可以是 Shell。

环境变量
--------
在任务代码中可以直接引用环境变量，比如我们不希望在任务代码中写死部署路径，就可以将部署路径作为一个环境变量。环境变量可以在 3 个地方定义：

1. 服务器，比如不同服务器可能部署路径不一致。
2. 创建部署任务时（即部署参数），比如每次部署的路径都不一样。
3. 项目，如果该项目在所有服务器上的部署路径都是一致的，则可以配置到项目环境变量中。

如果在 3 个地方定义了同一个变量，则优先级是：服务器 > 创建部署任务时 > 项目

部署参数
--------
每个工作流都可以设定部署参数，部署参数可以理解为每次部署都可能变化的值，例如要部署的代码版本（revision）。

部署
-----
部署即执行某个工作流。在执行部署时，当某个子流程执行完毕并且成功，系统会自动开始执行下一个子流程。当所有子流程执行完毕并且成功则认为该次部署成功，当任意一个子流程执行失败则系统不会执行后续子流程并标记该次部署失败。

Web Hook
---------
Web Hook 有两种类型：``in hook`` 和 ``out hook``

``in hook`` 是指外部系统通过 http 请求 Web Deployer 的指定 url 来触发用户指定的操作，目前支持两类操作：

1. 更新 Git 仓库
2. 发起部署

同时可以指定触发条件，如 http 请求体中的 ``event`` 字段等于 ``push`` 才执行对应操作。一个 ``in hook`` 可以有多个触发条件，多个条件之前的关系为 ``与``。

``out hook`` 是指 Web Deployer 系统内触发了某些事件时对外发送通知，目前支持的通知手段有：

1. url

目前支持的事件有：

1. 部署开始
2. 部署结束
3. 部署暂停
4. 子流程开始
5. 子流程结束
